"""
dealing with beahvior data. These routines uses video tracking data captured by YP's system
GT 2021
"""

# %init the data
# function initData()
# setappdata(0,'trackData',[]);       %track data = [time,xy,miceNum];
# setappdata(0,'ROIscoreData',[]);
# setappdata(0,'moveTag',[]);         %[time,activityState] 1=walk,0=rest over 1s(sampling period)
# setappdata(0,'checkFrames',[]);      %frames=[1,n/2,n] of episode (for post-check)
# setappdata(0,'newCheckTag',[1,1]);  %for myTimerCam function only
# %m=getappdata(0,'miceNum');
# bkgImg=getappdata(0,'bkImg2D');
# m=size(bkgImg,3);
# recTime=getappdata(0,'recTime');
# actHistPars=getappdata(0,'actHistPars');
# epn=ceil(recTime/actHistPars(1));
# bin=ceil(actHistPars(1)/actHistPars(2));
# setappdata(0,'actHistData',zeros(epn,bin,m));     %for all episodes (multi-files)
# setappdata(0,'actHistState',int8([]));      %state of actHistData,1=rest,0=awake
# setappdata(0,'sleepTag',zeros(3,m));   %curren state[number,duration(min),startpoint(min)]
# setappdata(0,'sleepData',zeros(1,3,m));       %[startpoint,endpoint,duration]=min
# setappdata(0,'velocityData',zeros(1,3,m));    %[time,speed,orietation]
# setappdata(0,'motionPIRData',zeros(1,2,m));     %[time,motionTag]
# setappdata(0,'actHistDataPIR',zeros(epn,bin,m));     %Data from PIR-motion sensor
# setappdata(0,'laserEvent',zeros(1,3));          %time points of laser stimulation: unit=minute [onset,tag,offset] 1=on;0=off
# setappdata(0,'SDEvent',0);     %time points of Sleep deprivation event (vibration+ultrasound), unit=minute
# setappdata(0,'ArduHistory',[]);
# setappdata(0,'Note',[]);
# setappdata(0,'seizureEvent',-1);       %timepoints(sec) for seizure events
# global lastPos;
# lastPos=struct('Area',100,'Centroid',[1,1],'BoundingBox',[],'FilledImage',[],'Solidity',0.9);
# lastPos=repmat(lastPos,m,1);
#
# these are some comments (after %) for some key variables

import matplotlib.pyplot as plt
import numpy as np
import scipy as sp
from scipy import io as sio
from PIL import Image as im

# loading and visualizig tracking data
# optimized for Jupyter notebook enviroment for now

def load_tracking(data_path):
	"""loads .mat files contains tracking info

	Parameters: 
	-----------
	data_path : string
		path to the data

	Returns:
	--------
	data dictionary"""

	data = sio.loadmat(data_path)
	return data

def show_background(data):
	"""plots backgroud image

	Parameters:
	-----------
	data : dictionary
		data dictinary generated by load_tracking
	"""
	bk_data = im.fromarray(data['bkImg2D'])
	return bk_data

def show_tracking(data):
	"""shows the tracking trace

	Parameters:
	-----------
	data : dictionary
		data dictinary generated by load_tracking
	"""
	track_data = data['trackData']

	# filtering out x=0, y=0 values
	
	arr = track_data
	arr[arr == 0]= 'nan'

	# plotting the data

	plt.plot(arr[0:,1], arr[0:,2])
